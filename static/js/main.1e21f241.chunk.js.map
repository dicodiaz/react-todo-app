{"version":3,"sources":["functionBased/components/TodoItem.module.css","functionBased/pages/SinglePage.js","functionBased/pages/About.js","functionBased/pages/NotMatch.js","functionBased/components/Alert.js","functionBased/components/Header.js","functionBased/components/InputTodo.js","functionBased/components/Navbar.js","functionBased/components/TodoItem.js","functionBased/components/TodosList.js","functionBased/components/TodoContainer.js","reportWebVitals.js","index.js"],"names":["module","exports","SinglePage","slug","useParams","aboutContent","title","description","find","item","className","About","useRouteMatch","url","path","to","NotMatch","Alert","props","classes","hidden","push","join","role","Header","style","padding","lineHeight","fontSize","fontWeight","marginBottom","color","textTransform","textAlign","InputTodo","addTodoItemProps","showAlert","useState","inputText","setInputText","onSubmit","e","preventDefault","trim","type","name","placeholder","value","onChange","prevState","target","marginTop","Navbar","navbarOpen","setNavbarOpen","closeMenu","onClick","prev","width","height","id","text","map","link","activeClassName","exact","TodoItem","todo","handleChangeProps","deleteTodoProps","setUpdate","completed","editing","setEditing","initialTitle","setInitialTitle","editTextInput","createRef","useEffect","current","focus","viewMode","editMode","display","handleUpdateDone","styles","onDoubleClick","checkbox","checked","fontStyle","opacity","textDecoration","ref","textInput","onKeyDown","key","onBlur","TodosList","todos","TodoContainer","JSON","parse","localStorage","getItem","setTodos","setHidden","setItem","stringify","newTodo","uuidv4","setTimeout","filter","updatedTitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,SAAW,2BAA2B,UAAY,8B,wKC6BnFC,EA3BI,WACjB,IAcQC,EAASC,cAATD,KACFE,EAfY,CAChB,CACEF,KAAM,YACNG,MAAO,gBACPC,YACE,0TAEJ,CACEJ,KAAM,eACNG,MAAO,mBACPC,YACE,sLAIyBC,MAAK,SAACC,GAAD,OAAUA,EAAKN,OAASA,KACpDG,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,YAEf,OACE,sBAAKG,UAAU,gBAAf,UACE,6BAAKJ,IACL,4BAAIC,QCFKI,EAnBD,WACZ,MAAsBC,cAAdC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,KACb,OACE,sBAAKJ,UAAU,iBAAf,UACE,qBAAIA,UAAU,cAAd,UACE,6BACE,cAAC,IAAD,CAAMK,GAAE,UAAKF,EAAL,cAAR,yBAEF,6BACE,cAAC,IAAD,CAAME,GAAE,UAAKF,EAAL,iBAAR,+BAGJ,cAAC,IAAD,CAAOC,KAAI,UAAKA,EAAL,UAAX,SACE,cAAC,EAAD,UCTOE,EANE,kBACb,8BACE,2DCaSC,EAfD,SAACC,GACb,IACMC,EAAU,CAAC,QAAS,gBAAiB,eAE3C,OAHmBD,EAAXE,QAEID,EAAQE,KAAK,UAEvB,qBAAKX,UAAWS,EAAQG,KAAK,KAAMC,KAAK,QAAxC,gCCiBWC,EAxBA,WAKb,OACE,wBAAQC,MALU,CAClBC,QAAS,SACTC,WAAY,SAGZ,SACE,oBACEF,MAAO,CACLG,SAAU,OACVC,WAAY,MACZC,aAAc,OACdH,WAAY,MACZI,MAAO,UACPC,cAAe,YACfC,UAAW,UARf,sB,gBC4CSC,EA/CG,SAAChB,GACjB,IAAQiB,EAAgCjB,EAAhCiB,iBAAkBC,EAAclB,EAAdkB,UAC1B,EAAkCC,mBAAS,CACzC/B,MAAO,KADT,mBAAOgC,EAAP,KAAkBC,EAAlB,KAuBA,OACE,uBAAMC,SAba,SAACC,GACpBA,EAAEC,iBACEJ,EAAUhC,MAAMqC,QAClBR,EAAiBG,EAAUhC,OAC3BiC,EAAa,CACXjC,MAAO,MAGT8B,KAK4B1B,UAAU,iBAAxC,UACE,uBACEkC,KAAK,OACLC,KAAK,QACLnC,UAAU,0BACVoC,YAAY,cACZC,MAAOT,EAAUhC,MACjB0C,SA3BW,SAACP,GAChBF,GAAa,SAACU,GAAD,mBAAC,eACTA,GADQ,kBAEVR,EAAES,OAAOL,KAAOJ,EAAES,OAAOH,cA0B1B,wBAAQH,KAAK,SAASlC,UAAU,mBAAhC,SACE,cAAC,IAAD,CAAcA,UAAU,YAAYe,MAAO,CAAEG,SAAU,OAAQuB,UAAW,e,gBCWnEC,EA9CA,WACb,MAAoCf,oBAAS,GAA7C,mBAAOgB,EAAP,KAAmBC,EAAnB,KAmBMC,EAAY,WAChBD,GAAc,IAGhB,OACE,sBAAK5C,UAAU,SAAf,UACE,wBAAQkC,KAAK,SAASY,QAVL,WACnBF,GAAc,SAACG,GAAD,OAAWA,MASvB,SACGJ,EACC,cAAC,IAAD,CAAS5B,MAAO,CAAEM,MAAO,OAAQ2B,MAAO,OAAQC,OAAQ,UAExD,cAAC,IAAD,CAAQlC,MAAO,CAAEM,MAAO,UAAW2B,MAAO,OAAQC,OAAQ,YAG9D,oBAAIjD,UAAS,kBAAa2C,EAAa,WAAa,IAApD,SA9BU,CACZ,CACEO,GAAI,EACJ9C,KAAM,IACN+C,KAAM,QAER,CACED,GAAI,EACJ9C,KAAM,SACN+C,KAAM,UAsBGC,KAAI,SAACC,GAAD,OACT,6BACE,cAAC,IAAD,CAAShD,GAAIgD,EAAKjD,KAAMkD,gBAAgB,cAAcR,QAASD,EAAWU,OAAK,EAA/E,SACGF,EAAKF,QAFDE,EAAKH,a,iBCyCTM,EA5EE,SAAChD,GAChB,IAAQiD,EAAwDjD,EAAxDiD,KAAMC,EAAkDlD,EAAlDkD,kBAAmBC,EAA+BnD,EAA/BmD,gBAAiBC,EAAcpD,EAAdoD,UAC1CC,EAAyBJ,EAAzBI,UAAWX,EAAcO,EAAdP,GAAItD,EAAU6D,EAAV7D,MAEvB,EAA8B+B,oBAAS,GAAvC,mBAAOmC,EAAP,KAAgBC,EAAhB,KACA,EAAwCpC,mBAAS,IAAjD,mBAAOqC,EAAP,KAAqBC,EAArB,KACMC,EAAgBC,sBACtBC,qBAAU,WACJN,GAASI,EAAcG,QAAQC,UAClC,CAACR,EAASI,IAEb,IAYMK,EAAW,GACXC,EAAW,GACbV,EAASS,EAASE,QAAU,OAC3BD,EAASC,QAAU,OAExB,IAAMC,EAAmB,WACvBX,GAAW,IAQb,OACE,qBAAI/D,UAAW2E,IAAO5E,KAAtB,UACE,sBAAK6E,cArBa,WACpBb,GAAW,GACXE,EAAgBrE,IAmBqBmB,MAAOwD,EAA1C,UACE,uBACErC,KAAK,WACLlC,UAAW2E,IAAOE,UAAY,wBAC9BC,QAASjB,EACTvB,SAAU,kBAAMoB,EAAkBR,MAEpC,wBAAQhB,KAAK,SAASY,QAAS,kBAAMa,EAAgBT,IAArD,SACE,cAAC,IAAD,CAASnC,MAAO,CAAEM,MAAO,YAAaH,SAAU,cAElD,sBAAMH,MAAO8C,EAtCI,CACrBkB,UAAW,SACX1D,MAAO,eACP2D,QAAS,GACTC,eAAgB,gBAkC8B,KAA1C,SAAiDrF,OAEnD,uBACEsC,KAAK,OACLgD,IAAKhB,EACLlE,UAAW2E,IAAOQ,UAClBpE,MAAOyD,EACPnC,MAAOzC,EACP0C,SAAU,SAACP,GAAD,OAAO6B,EAAU7B,EAAES,OAAOH,MAAOa,IAC3CkC,UAAW,SAACrD,GACI,UAAVA,EAAEsD,IAAiBX,IACJ,WAAV3C,EAAEsD,MA3BjBzB,EAAUI,EAAcd,GACxBwB,MA4BIY,OAAQZ,QCxCDa,EAxBG,SAAC/E,GACjB,IAAQgF,EAAyDhF,EAAzDgF,MAAO9B,EAAkDlD,EAAlDkD,kBAAmBC,EAA+BnD,EAA/BmD,gBAAiBC,EAAcpD,EAAdoD,UACnD,OACE,6BACG4B,EAAMpC,KAAI,SAACK,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,kBAAmBA,EACnBC,gBAAiBA,EACjBC,UAAWA,GAJNH,EAAKP,UC4FLuC,EA1FO,WACpB,MAA0B9D,mBAAS+D,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAAhF,mBAAOL,EAAP,KAAcM,EAAd,KACA,EAA4BnE,oBAAS,GAArC,mBAAOjB,EAAP,KAAeqF,EAAf,KAEA3B,qBAAU,WACRwB,aAAaI,QAAQ,QAASN,KAAKO,UAAUT,MAC5C,CAACA,IAkDJ,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjC,OAAK,EAACnD,KAAK,IAAlB,SACE,sBAAMJ,UAAU,qCAAhB,SACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,yDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWyB,iBAxCP,SAAC7B,GACnB,IAAMsG,EAAU,CACdhD,GAAIiD,cACJvG,QACAiE,WAAW,GAEbiC,GAAS,SAACvD,GAAD,4BAAmBA,GAAnB,CAA8B2D,QAkCiBxE,UAjBxC,WAChBqE,GAAU,GACVK,YAAW,WACTL,GAAU,KACT,QAcW,cAAC,EAAD,CACEP,MAAOA,EACP9B,kBA7DG,SAACR,GACpB4C,GAAS,SAACvD,GAAD,OACPA,EAAUa,KAAI,SAACK,GACb,OAAIA,EAAKP,KAAOA,EACP,2BACFO,GADL,IAEEI,WAAYJ,EAAKI,YAGdJ,SAqDKE,gBAhDF,SAACT,GACf4C,GAAS,SAACvD,GAAD,OAAeA,EAAU8D,QAAO,SAAC5C,GAAD,OAAUA,EAAKP,KAAOA,SAgD/CU,UApCA,SAAC0C,EAAcpD,GAC/B4C,GAAS,SAACvD,GAAD,OACPA,EAAUa,KAAI,SAACK,GACb,OAAIA,EAAKP,KAAOA,EACP,2BACFO,GADL,IAEE7D,MAAO0G,IAGJ7C,WA6BG,cAAC,EAAD,CAAO/C,OAAQA,eAMzB,cAAC,IAAD,CAAON,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,aClFKmG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAUC,kBAAlB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.1e21f241.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__1A9TN\",\"checkbox\":\"TodoItem_checkbox__1i2Ua\",\"textInput\":\"TodoItem_textInput__1IdQl\"};","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst SinglePage = () => {\n  const aboutData = [\n    {\n      slug: 'about-app',\n      title: 'About the App',\n      description:\n        'In this app, you can add, delete, submit and edit items. To edit items, simply double click on it. Once you are done, press the enter key to resubmit. This app will persist your data in the browser local storage. So whether you reload, close your app or reopened it, you still have access to your to-dos items.',\n    },\n    {\n      slug: 'about-author',\n      title: 'About the Author',\n      description:\n        'This app was developed by Ibas Majid, a self-taught web developer and a technical writer. He is opened to freelance Gig. So go ahead and connect with ibas on Twitter @ibaslogic.',\n    },\n  ];\n  const { slug } = useParams();\n  const aboutContent = aboutData.find((item) => item.slug === slug);\n  const { title, description } = aboutContent;\n\n  return (\n    <div className=\"main__content\">\n      <h1>{title}</h1>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default SinglePage;\n","import React from 'react';\nimport { Link, Route, useRouteMatch } from 'react-router-dom';\nimport SinglePage from './SinglePage';\n\nconst About = () => {\n  const { url, path } = useRouteMatch();\n  return (\n    <div className=\"about__content\">\n      <ul className=\"about__list\">\n        <li>\n          <Link to={`${url}/about-app`}>About App</Link>\n        </li>\n        <li>\n          <Link to={`${url}/about-author`}>About Author</Link>\n        </li>\n      </ul>\n      <Route path={`${path}/:slug`}>\n        <SinglePage />\n      </Route>\n    </div>\n  );\n};\n\nexport default About;\n","import React from 'react';\n\nconst NotMatch = () => (\n    <div>\n      <h3>No match for this page</h3>\n    </div>\n  );\n\nexport default NotMatch;\n","import PropTypes from 'prop-types';\n\nconst Alert = (props) => {\n  const { hidden } = props;\n  const classes = ['alert', 'alert-warning', 'text-center'];\n  if (hidden) classes.push('d-none');\n  return (\n    <div className={classes.join(' ')} role=\"alert\">\n      Please write item\n    </div>\n  );\n};\n\nAlert.propTypes = {\n  hidden: PropTypes.bool.isRequired,\n};\n\nexport default Alert;\n","const Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n  return (\n    <header style={headerStyle}>\n      <h1\n        style={{\n          fontSize: '6rem',\n          fontWeight: '600',\n          marginBottom: '2rem',\n          lineHeight: '1em',\n          color: '#ececec',\n          textTransform: 'lowercase',\n          textAlign: 'center',\n        }}\n      >\n        todos\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { FaPlusCircle } from 'react-icons/fa';\n\nconst InputTodo = (props) => {\n  const { addTodoItemProps, showAlert } = props;\n  const [inputText, setInputText] = useState({\n    title: '',\n  });\n\n  const onChange = (e) => {\n    setInputText((prevState) => ({\n      ...prevState,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.title.trim()) {\n      addTodoItemProps(inputText.title);\n      setInputText({\n        title: '',\n      });\n    } else {\n      showAlert();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input\n        type=\"text\"\n        name=\"title\"\n        className=\"form-control input-text\"\n        placeholder=\"Add Todo...\"\n        value={inputText.title}\n        onChange={onChange}\n      />\n      <button type=\"submit\" className=\"btn input-submit\">\n        <FaPlusCircle className=\"text-dark\" style={{ fontSize: '25px', marginTop: '2px' }} />\n      </button>\n    </form>\n  );\n};\n\nInputTodo.propTypes = {\n  addTodoItemProps: PropTypes.func.isRequired,\n  showAlert: PropTypes.func.isRequired,\n};\n\nexport default InputTodo;\n","import React, { useState } from 'react';\nimport { FiMenu } from 'react-icons/fi';\nimport { MdClose } from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar = () => {\n  const [navbarOpen, setNavbarOpen] = useState(false);\n\n  const links = [\n    {\n      id: 1,\n      path: '/',\n      text: 'Home',\n    },\n    {\n      id: 2,\n      path: '/about',\n      text: 'About',\n    },\n  ];\n\n  const handleToggle = () => {\n    setNavbarOpen((prev) => !prev);\n  };\n\n  const closeMenu = () => {\n    setNavbarOpen(false);\n  };\n\n  return (\n    <nav className=\"navBar\">\n      <button type=\"button\" onClick={handleToggle}>\n        {navbarOpen ? (\n          <MdClose style={{ color: '#fff', width: '40px', height: '40px' }} />\n        ) : (\n          <FiMenu style={{ color: '#7b7b7b', width: '40px', height: '40px' }} />\n        )}\n      </button>\n      <ul className={`menuNav ${navbarOpen ? 'showMenu' : ''}`}>\n        {links.map((link) => (\n          <li key={link.id}>\n            <NavLink to={link.path} activeClassName=\"active-link\" onClick={closeMenu} exact>\n              {link.text}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import PropTypes from 'prop-types';\nimport { createRef, useEffect, useState } from 'react';\nimport { FaTrash } from 'react-icons/fa';\nimport styles from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const { todo, handleChangeProps, deleteTodoProps, setUpdate } = props;\n  const { completed, id, title } = todo;\n\n  const [editing, setEditing] = useState(false);\n  const [initialTitle, setInitialTitle] = useState('');\n  const editTextInput = createRef();\n  useEffect(() => {\n    if (editing) editTextInput.current.focus();\n  }, [editing, editTextInput]);\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: 'antiquewhite',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  const handleEditing = () => {\n    setEditing(true);\n    setInitialTitle(title);\n  };\n\n  const viewMode = {};\n  const editMode = {};\n  if (editing) viewMode.display = 'none';\n  else editMode.display = 'none';\n\n  const handleUpdateDone = () => {\n    setEditing(false);\n  };\n\n  const cancelUpdate = () => {\n    setUpdate(initialTitle, id);\n    handleUpdateDone();\n  };\n\n  return (\n    <li className={styles.item}>\n      <div onDoubleClick={handleEditing} style={viewMode}>\n        <input\n          type=\"checkbox\"\n          className={styles.checkbox && 'form-check-input me-2'}\n          checked={completed}\n          onChange={() => handleChangeProps(id)}\n        />\n        <button type=\"button\" onClick={() => deleteTodoProps(id)}>\n          <FaTrash style={{ color: 'orangered', fontSize: '20.5px' }} />\n        </button>\n        <span style={completed ? completedStyle : null}>{title}</span>\n      </div>\n      <input\n        type=\"text\"\n        ref={editTextInput}\n        className={styles.textInput}\n        style={editMode}\n        value={title}\n        onChange={(e) => setUpdate(e.target.value, id)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') handleUpdateDone();\n          else if (e.key === 'Escape') cancelUpdate();\n        }}\n        onBlur={handleUpdateDone}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  todo: PropTypes.object.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => {\n  const { todos, handleChangeProps, deleteTodoProps, setUpdate } = props;\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={handleChangeProps}\n          deleteTodoProps={deleteTodoProps}\n          setUpdate={setUpdate}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  setUpdate: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport About from '../pages/About';\nimport NotMatch from '../pages/NotMatch';\nimport Alert from './Alert';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\nimport Navbar from './Navbar';\nimport TodosList from './TodosList';\n\nconst TodoContainer = () => {\n  const [todos, setTodos] = useState(JSON.parse(localStorage.getItem('todos')) || []);\n  const [hidden, setHidden] = useState(true);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const handleChange = (id) => {\n    setTodos((prevState) =>\n      prevState.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      }),\n    );\n  };\n\n  const delTodo = (id) => {\n    setTodos((prevState) => prevState.filter((todo) => todo.id !== id));\n  };\n\n  const addTodoItem = (title) => {\n    const newTodo = {\n      id: uuidv4(),\n      title,\n      completed: false,\n    };\n    setTodos((prevState) => [...prevState, newTodo]);\n  };\n\n  const setUpdate = (updatedTitle, id) => {\n    setTodos((prevState) =>\n      prevState.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: updatedTitle,\n          };\n        }\n        return todo;\n      }),\n    );\n  };\n\n  const showAlert = () => {\n    setHidden(false);\n    setTimeout(() => {\n      setHidden(true);\n    }, 2000);\n  };\n\n  return (\n    <>\n      <Navbar />\n      <Switch>\n        <Route exact path=\"/\">\n          <main className=\"bg-dark text-white min-vh-100 pt-5\">\n            <div className=\"container-md pt-4\">\n              <div className=\"row mx-0 justify-content-end justify-content-md-center\">\n                <div className=\"col-11 col-md-9\">\n                  <Header />\n                  <InputTodo addTodoItemProps={addTodoItem} showAlert={showAlert} />\n                  <TodosList\n                    todos={todos}\n                    handleChangeProps={handleChange}\n                    deleteTodoProps={delTodo}\n                    setUpdate={setUpdate}\n                  />\n                  <Alert hidden={hidden} />\n                </div>\n              </div>\n            </div>\n          </main>\n        </Route>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"*\">\n          <NotMatch />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default TodoContainer;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './functionBased/App.css';\nimport TodoContainer from './functionBased/components/TodoContainer';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={process.env.PUBLIC_URL}>\n      <TodoContainer />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}